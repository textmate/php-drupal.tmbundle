<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/php
&lt;?php

$basename = isset($_ENV['TM_FILEPATH']) ? preg_replace('~^(.*)\..*$~', '$1', basename($_ENV['TM_FILEPATH'])) : 'module';

echo "/**
 * Implementation of hook_nodeapi().
 */
function {$basename}_nodeapi(&amp;\\\$node, \\\$op, \\\$teaser = NULL, \\\$page = NULL) {
	switch (\\\$op) {\${1:
		case 'load':
			\${2:// The node is about to be loaded from the database. This hook can be used
			// to load additional data at this time.}
			break;}\${3:
		case 'view':
			\${4:// The node is about to be presented to the user. The module may change
			// \\\$node-&gt;body prior to presentation. This hook will be called after
			// hook_view(), so the module may assume the node is filtered and now contains HTML.}
			break;}\${5:
		case 'alter':
			\${6:// The \\\$node-&gt;content array has been rendered, so the node body or teaser
			// is filtered and now contains HTML. This op should only be used when text
			// substitution, filtering, or other raw text operations are necessary.}
			break;}\${7:
		case 'insert':
			\${8:// The node is being created (inserted in the database).}
			break;}\${9:
		case 'update':
			\${10:// The node is being updated.}
			break;}\${11:
		case 'validate':
			\${12:// The user has just finished editing the node and is trying to preview or
			// submit it. This hook can be used to check or even modify the node.
			// Errors should be set with form_set_error().}
			break;}\${13:
		case 'submit':
			\${14:// The node passed validation and will soon be saved. Modules may use this
			// to make changes to the node before it is saved to the database.}
			break;}\${15:
		case 'delete':
			\${16:// The node is being deleted.}
			break;}\$17
	} 
}
\$18";</string>
	<key>input</key>
	<string>none</string>
	<key>name</key>
	<string>Hooks: hook_nodeapi</string>
	<key>output</key>
	<string>insertAsSnippet</string>
	<key>scope</key>
	<string>source.php</string>
	<key>tabTrigger</key>
	<string>hook_nodeapi</string>
	<key>uuid</key>
	<string>8AC8D649-45D4-4C6B-98F5-5AEA1C51186D</string>
</dict>
</plist>
